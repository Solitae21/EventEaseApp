@page "/register"
@inject NavigationManager NavManager
@using EventEaseApp.Services
@inject AttendanceService AttendanceTracker
@using EventEaseApp.Models

@inject AuthService Auth



<h1>Event Registration</h1>

<p><strong>Event Name:</strong> @eventName</p>
<p><strong>Date:</strong> @eventDate?.ToString("MMMM dd, yyyy")</p>
<p><strong>Location:</strong> @location</p>

<form @onsubmit="SubmitRegistration">
    <div class="form-group">
        <label>Name:</label>
        <input type="text" class="form-control" placeholder="Enter your name" @bind="userName" required />
    </div>

    <div class="form-group">
        <label>Email:</label>
        <input type="email" class="form-control" placeholder="Enter your email" @bind="userEmail" required />
    </div>

    <button class="btn btn-success" type="submit">Submit</button>
    <button class="btn btn-danger" type="button" @onclick="Cancel">Cancel</button>
</form>

@code {
    private string? eventName;
    private DateTime? eventDate;
    private string? location;
    private string? userName;
    private string? userEmail;

    protected override void OnInitialized()
    {
        if (!Auth.IsLoggedIn)
        {
            NavManager.NavigateTo("/login"); // Redirect to login if user is not authenticated
        }

        var query = NavManager.ToAbsoluteUri(NavManager.Uri).Query;
        var parameters = System.Web.HttpUtility.ParseQueryString(query);

        eventName = parameters["name"] ?? "Default Event";
        location = parameters["location"];
        if (DateTime.TryParse(parameters["date"], out var parsedDate))
        {
            eventDate = parsedDate;
        }
    }

    private void Cancel()
    {
        NavManager.NavigateTo("/events"); // Redirects back to the events page
    }

    private void SubmitRegistration()
    {
        if (!string.IsNullOrEmpty(userName) && !string.IsNullOrEmpty(userEmail))
        {
            var registration = new AttendanceModel
                {
                    EventName = eventName ?? "",
                    EventDate = eventDate ?? DateTime.Now,
                    Location = location ?? "",
                    UserName = userName,
                    UserEmail = userEmail
                };

            AttendanceTracker.RegisterUser(registration);
            NavManager.NavigateTo("/attendance"); // Redirect to attendance tracker page
        }
    }
}
